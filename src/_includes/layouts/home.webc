---
layout: 'layouts/base.webc'
---

<script>
document.addEventListener('alpine:init', () => {
  Alpine.store('category', {
    category: 'Foundations',

    set(category) {
      this.category = category;
    }
  });

  Alpine.store('filter', {
    tags: [],

    set(tags) {
      this.tags = tags;
    },
  });
});

// https://codepen.io/rblasam/pen/gOWrNMy

function item(settings) {
  return {
    tags: settings.tags,

    get tagFilters() {
      return this.$store.filter.tags;
    },

    get category() {
      return this.$store.category.category;
    },

    get shouldShow() {
      return this.tags.includes(this.category) && (
        !this.tagFilters.length ||
        this.tagFilters.every((v) => this.tags.includes(v))
      );
    },
  };
}
</script>

<main id="main-content" tabindex="-1">
<!-- fix height -->
<div style="background: #F2F2F2" class="flex justify-end">
  <div class="py-4 md:py-8 prose md:prose-base prose-sm prose-gray text-gray-500 md:max-w-1/2 px-4">
    <template @raw="content" webc:nokeep></template>
  </div>
</div>
<div>
		<ul class="tabs" x-data="{
      tabs: ['Foundations', 'Builds']
    }">
      <template x-for="tab in tabs">
        <li x-on:click="$store.category.set(tab)"
          x-bind:class="$store.category.category.includes(tab) ? 'tab tab-active' : 'tab'"
          >
          <label x-text="tab"></label>
        </li>
      </template>
		</ul>
		
		<div class="md:flex" x-data="{
      setup: {
        Foundations: {
          test1: ['test2', 'test3'],
        },
        Builds: {
          test4: ['test5', 'test6'],
        },
      },

      get currentCategory() {
        return this.$store.category.category;
      },

      get tags() {
        return this.$store.filter.tags;
      },
      set tags(value) {
        this.$store.filter.set(value);
      },
    }">
      <div class="p-4 md:flex-1">
        <template x-for="category in Object.keys(setup[currentCategory])">
          <div>
            <h3 x-text="category"></h3>
            <ul>
              <template x-for="tag of setup[currentCategory][category]">
                <li class="filter-option">
                  <label>
                    <input type="checkbox" x-bind:value="tag" x-model="tags">
                    <span x-text="tag"></span>
                  </label>
                </li>
              </template>
            </ul>
          </div>
        </template>
      </div>
      <div class="p-4 grid sm:grid-cols-2 lg:grid-cols-3 md:flex-3">
        <listing-item webc:for="item of collections.all" @attributes="item" :is-home="true"></listing-item>
      </div>
	</div>
</div>